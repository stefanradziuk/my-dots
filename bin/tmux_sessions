#!/usr/bin/env bash

# MIT License
#
# Copyright (c) 2020 awesome-streamers
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# adapted from
# github.com/awesome-streamers/awesome-streamerrc/ThePrimeagen/tmux-sessions

createWindow() {
    session=$1
    window=$2
    shift
    shift
    hasWindow=$(tmux list-windows -t $session | grep "$window")
    if [ -z "$hasWindow" ]; then
        cmd="tmux neww -t $session: -n $window -d"
        if [ $# -gt 0 ]; then
            cmd="$cmd $@"
        fi
        echo "Creating Window(\"$hasWindow\"): $cmd"
        eval $cmd
    fi
}

createSession() {
    session=$1
    window=$2
    shift
    shift
    cmd="tmux new -s $session -d -n $window $@ > /dev/null 2>&1"

    echo "Creating Session: $cmd"
    eval $cmd
}

while [ "$#" -gt 0 ]; do
    curr=$1
    shift

    case "$curr" in
    "--drp")
        DRP="~/drp/repo"
        DRP_START_SERVER="gunicorn --worker-class eventlet -w 1 app.index:app --log-file -"

        export FLASK_SECRET="bye"
        export FLASK_APP="app.index:app"
        export FLASK_ENV="development"

        createSession drp primary -c "$DRP"
        tmux send-keys -t drp:primary "source $DRP/venv/bin/activate" Enter

        createWindow drp drp_server -c "$DRP"
        tmux send-keys -t drp:drp_server "source $DRP/venv/bin/activate" Enter
        tmux send-keys -t drp:drp_server "$DRP_START_SERVER" Enter

        createWindow drp secondary -c "$DRP"
        tmux send-keys -t drp:secondary "source $DRP/venv/bin/activate" Enter
        ;;
    "--histopathology")
        HISTO_START_SERVER="uvicorn backend.main:app"

        export PYTHONPATH="/home/stefan/ic/term_1/kidneys/Engineering_project_2021"

        createSession histopathology primary -c "$PYTHONPATH"
        tmux split-window -t histopathology:primary -c "$PYTHONPATH"
        tmux send-keys -t histopathology:primary.0 "source $PYTHONPATH/venv/bin/activate" Enter
        tmux send-keys -t histopathology:primary.1 "source $PYTHONPATH/venv/bin/activate" Enter
        tmux send-keys -t histopathology:primary.1 "$HISTO_START_SERVER"

        createWindow histopathology secondary -c "$PYTHONPATH/frontend"
        tmux send-keys -t histopathology:secondary "source $PYTHONPATH/venv/bin/activate" Enter

        createWindow histopathology ternary -c "$PYTHONPATH"
        tmux send-keys -t histopathology:ternary "source $PYTHONPATH/venv/bin/activate" Enter
        ;;
    esac
done

