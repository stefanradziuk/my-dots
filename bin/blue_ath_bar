#!/usr/bin/env bash

# if [[ "$#" -ne 1 ]]; then
#   echo "usage: blue_ath_bar -[st]"
#   exit 1
# fi

CONTROLLER="40:A3:CC:C5:DA:2C"
HEADSET_ATH="00:0A:45:0C:35:5C"
HEADSET_SONY="38:18:4C:F8:FC:27"
HEADSET="$HEADSET_ATH"

if [ "$2" = "sony" ]; then
  HEADSET="$HEADSET_SONY"
else
  HEADSET="$HEADSET_ATH"
fi

ICON="ï–®"

echo_status() {
  CONNECTED_ATH=$(bluetoothctl info "$HEADSET_ATH" | awk '{ if ($1=="Connected:") { print $2 } }')
  CONNECTED_SONY=$(bluetoothctl info "$HEADSET_SONY" | awk '{ if ($1=="Connected:") { print $2 } }')
  if [[ "$CONNECTED_ATH" == yes || "$CONNECTED_SONY" == yes ]]; then
    # "Either headset connected"
    echo "%{F#87afaf}$ICON%{F-}"
  elif [[ $(bluetoothctl show "$CONTROLLER" | awk '{ if ($1=="Powered:") { print $2 } }') == yes ]]; then
    # "Bluetooth sw controller on"
    echo "$ICON"
  elif [[ $(bluetoothctl list) == *Controller* ]]; then
    # "Bluetooth hw on"
    echo "%{F#626262}$ICON%{F-}"
  else
    # "Bluetooth hw off"
    echo ''
  fi
}

keep_trying_to_connect() {
  until pacmd list-sources | grep "$HEADSET" > /dev/null;
  do
    bluetoothctl connect "$HEADSET"
    sleep 1
  done
}

toggle() {
  CONNECTED=$(bluetoothctl info "$HEADSET" | awk '{ if ($1=="Connected:") { print $2 } }')
  if [[ "$CONNECTED" == yes ]]; then
    # bluetoothctl power off
    keep_trying_to_connect
  elif [[ $(bluetoothctl show "$CONTROLLER" | awk '{ if ($1=="Powered:") { print $2 } }') == yes ]]; then
    keep_trying_to_connect
  else
    bluetoothctl power on && keep_trying_to_connect
  fi
}

while getopts ":st" opt; do
  case $opt in
    s)
      echo_status
      exit 0
      ;;
    t)
      toggle
      exit 0
      ;;
    /?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
  esac
done

echo "usage: blue_ath_bar -[st]"
exit 1
